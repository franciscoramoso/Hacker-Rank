{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 (def T (Integer/parseInt (read-line)))\
(dotimes [i T]\
	(def n (Integer/parseInt (read-line)))\
\
	(defn make-lists [y]\
		(defn the-lists [x lst1 lst2]\
			(if (= x y)\
				(do (list lst1 lst2))\
				(do (def v (map #(Integer/parseInt %) (vec (re-seq #"\\d+" (read-line)))))\
					(the-lists (inc x) (conj lst1 (nth v 0)) (conj lst2 (nth v 1))))))\
	   (the-lists 0 '() '()))\
\
	(def listas (make-lists n))\
	(if (= (count (nth listas 1)) (count (distinct (nth listas 0))))\
	(do (println "YES"))\
	(do (println "NO"))))}